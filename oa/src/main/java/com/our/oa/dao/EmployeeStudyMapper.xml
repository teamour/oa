<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.our.oa.dao.EmployeeStudyMapper">
  <resultMap id="BaseResultMap" type="com.our.oa.entity.EmployeeStudy">
    <id column="employee_study_id" jdbcType="INTEGER" property="employeeStudyId" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="study_content" jdbcType="VARCHAR" property="studyContent" />
    <result column="begin_date" property="beginDate" />
    <result column="study_time" jdbcType="VARCHAR" property="studyTime" />
    <result column="handler" jdbcType="INTEGER" property="handler" />
    <result column="learn_cotent" jdbcType="VARCHAR" property="learnCotent" />
    <result column="evaluation" jdbcType="VARCHAR" property="evaluation" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_employee_study
    where employee_study_id = #{employeeStudyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.our.oa.entity.EmployeeStudy">
    insert into t_employee_study (employee_id, study_content, 
      begin_date, study_time, handler, 
      learn_cotent, evaluation, create_time
      )
    values (#{employeeId,jdbcType=INTEGER}, #{studyContent,jdbcType=VARCHAR}, 
      #{beginDate}, #{studyTime,jdbcType=VARCHAR}, #{handler,jdbcType=INTEGER}, 
      #{learnCotent,jdbcType=VARCHAR}, #{evaluation,jdbcType=VARCHAR},now()
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.our.oa.entity.EmployeeStudy">
    update t_employee_study
    <set>
    <if test="employeeId!=null and employeeId!=''">
    employee_id = #{employeeId,jdbcType=INTEGER},
    </if>
    <if test="studyContent!=null and studyContent!=''">
    study_content = #{studyContent,jdbcType=VARCHAR},
    </if>
    <if test="beginDate!=null and beginDate!=''">
    begin_date = #{beginDate,jdbcType=DATE},
    </if>
    <if test="studyTime!=null and studyTime!=''">
    study_time = #{studyTime,jdbcType=VARCHAR},
    </if>
    <if test="handler!=null and handler!=''">
    handler = #{handler,jdbcType=INTEGER},
    </if>
    <if test="learnCotent!=null and learnCotent!=''">
    learn_cotent = #{learnCotent,jdbcType=VARCHAR},
    </if>
    <if test="evaluation!=null and evaluation!=''">
    evaluation = #{evaluation,jdbcType=VARCHAR},
    </if>
    update_time = now()
    </set>
    <where>
    employee_study_id = #{employeeStudyId,jdbcType=INTEGER}
    </where>
  </update>
  
  <update id="updateForDelete" parameterType="com.our.oa.entity.EmployeeStudy">
    update t_employee_study
    set delete_flag = true,
    	delete_time = now()
    where employee_study_id = #{employeeStudyId,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select employee_study_id, employee_id, study_content, begin_date, study_time, handler, 
    learn_cotent, evaluation, create_time, update_time, delete_time, delete_flag
    from t_employee_study
    <where>
    employee_study_id = #{employeeStudyId,jdbcType=INTEGER} and delete_flag = 0
    </where>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select employee_study_id, employee_id, study_content, begin_date, study_time, handler, 
    learn_cotent, evaluation, create_time, update_time, delete_time, delete_flag
    from t_employee_study
    <where>
    delete_flag = 0
    </where>
  </select>
  
  <select id="selectQueryList" parameterType="com.our.oa.dto.list.EmployeeStudyListQueryDTO" resultMap="BaseResultMap">
    select employee_study_id, employee_id, study_content, begin_date, study_time, handler
    ,learn_cotent,evaluation,delete_flag
    from t_employee_study
    <where>
    <if test="employeeId!=null and employeeId!=''">
      employee_id like #{employeeId} and
    </if>
    delete_flag = 0 
    </where>
  </select>
  
</mapper>